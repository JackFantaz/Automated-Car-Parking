/* Generated by AN DISI Unibo */ 
package it.unibo.outdoorsentinelactor

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Outdoorsentinelactor ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "watching"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("watching") { //this:State
					action { //it:State
					}
					 transition(edgeName="t50",targetState="timer",cond=whenEvent("outdoorOccupied"))
				}	 
				state("timer") { //this:State
					action { //it:State
						stateTimer = TimerActor("timer_timer", 
							scope, context!!, "local_tout_outdoorsentinelactor_timer", 5000.toLong() )
					}
					 transition(edgeName="t51",targetState="alarm",cond=whenTimeout("local_tout_outdoorsentinelactor_timer"))   
					transition(edgeName="t52",targetState="watching",cond=whenEvent("outdoorCleared"))
				}	 
				state("alarm") { //this:State
					action { //it:State
						emit("outdoorAlarm", "outdoorAlarm(0)" ) 
						updateResourceRep( "outdoorAlarm(0)"  
						)
					}
					 transition(edgeName="t53",targetState="revoke",cond=whenEvent("outdoorCleared"))
				}	 
				state("revoke") { //this:State
					action { //it:State
						emit("outdoorAlarmRevoked", "outdoorAlarmRevoked(0)" ) 
						updateResourceRep( "outdoorAlarmRevoked(0)"  
						)
					}
					 transition( edgeName="goto",targetState="watching", cond=doswitch() )
				}	 
			}
		}
}
